{"version":3,"sources":["parse.ts","compile.ts","play.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["grammar","ohm","semantics","createSemantics","addOperation","Composition","_1","statements","children","map","x","ast","settings","filter","type","sections","Instrument","header","_space","trackList","instrument","name","tracks","flat","TrackList","track","_bar","_bar2","sourceString","instrumentHeader","_slash","_2","Statement","setOrSection","_","set","_set","param","_to","_3","value","Number","Error","Arrangement","blockList","blocks","arrangementHeader","_slash2","BlockList","block","_then","block2","Block","command","commands","Play","_play","fragment","times","_times","parseInt","source","Loop","_loop","Fragment","reversed","ident","parse","code","match","e","succeeded","console","log","trace","toString","compile","error","message","main","find","s","bpmSet","reduce","section","bpm","playbacksFromSection","composition","flatMap","loop","Playback","playbacksFromCommand","SYNTH","Tone","toDestination","KIT","urls","A1","A2","A3","baseUrl","completionCallback","note","complete","this","split","time","beat","reverse","triggerAttackRelease","length","Player","playbacks","scheduleRepeat","forEach","playback","play","start","Main","styled","Editor","textarea","Preview","div","DEFAULT_TEXT","DEFAULT_COMPOSITION","App","useState","playing","setPlaying","setCode","started","setStarted","setComposition","togglePlay","a","stop","cancel","onChange","target","autoCorrect","autoComplete","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b0ba5d7.chunk.js","sourcesContent":["import ohm from \"ohm-js\";\nimport raw from \"raw.macro\";\nconst contents = raw(\"./grammar.ohm\");\n\nconst grammar = ohm.grammar(contents);\n\nexport interface Ast {\n  settings: Setting[];\n  sections: Section[];\n}\n\ntype Setting = { type: \"set\" } & (BpmSet | KeySet);\n\nexport interface BpmSet {\n  param: \"bpm\";\n  value: number;\n}\n\ninterface KeySet {\n  param: \"key\";\n  value: string;\n}\n\nexport type Section = InstrumentSection | ArrangementSection;\ntype Track = string;\n\ninterface InstrumentSection {\n  name: string;\n  type: \"instrument\";\n  instrument: string;\n  tracks: Track[];\n}\n\nexport interface ArrangementSection {\n  name: string;\n  type: \"arrangement\";\n  blocks: Block[];\n}\n\ninterface Block {\n  commands: Command[];\n}\n\nexport type Command = PlayCommand | LoopCommand;\n\ninterface PlayCommand {\n  type: \"play\";\n  times: number;\n  source: Source;\n}\n\ninterface LoopCommand {\n  type: \"loop\";\n  source: Source;\n}\n\nexport type Source = { reversed: boolean } & (\n  | InlineTrackSource\n  | SectionSource\n);\n\ninterface InlineTrackSource {\n  type: \"inline_track\";\n  instrument: string;\n  track: Track;\n}\n\ninterface SectionSource {\n  type: \"section\";\n  name: string;\n}\n\nconst semantics = grammar.createSemantics().addOperation(\"ast\", {\n  Composition(_1, { children }): Ast {\n    const statements = children.map((x) => x.ast());\n    return {\n      settings: statements.filter((x) => x.type === \"set\"),\n      sections: statements.filter(\n        (x) => x.type === \"instrument\" || x.type === \"arrangement\"\n      ),\n    };\n  },\n  Instrument(header, _space, trackList): InstrumentSection {\n    const { instrument, name } = header.ast();\n    return {\n      type: \"instrument\",\n      instrument,\n      name,\n      tracks: trackList.ast().flat(),\n    };\n  },\n  TrackList(track, _1, tracks) {\n    return [track.ast(), ...tracks.ast()];\n  },\n  track(_bar, track, _bar2): Track {\n    return track.sourceString;\n  },\n  instrumentHeader(_1, name, _slash, instrument, _2) {\n    return { name: name.sourceString, instrument: instrument.sourceString };\n  },\n  Statement(setOrSection, _) {\n    return setOrSection.ast();\n  },\n  set(_set, _1, param, _2, _to, _3, value): Setting {\n    switch (param.sourceString) {\n      case \"bpm\":\n        return { type: \"set\", param: \"bpm\", value: Number(value.sourceString) };\n      case \"key\":\n        return { type: \"set\", param: \"key\", value: value.sourceString };\n      default:\n        throw new Error(\"bpm or key expected\");\n    }\n  },\n\n  Arrangement(header, _1, blockList): ArrangementSection {\n    const { name } = header.ast();\n    return {\n      type: \"arrangement\",\n      name,\n      blocks: blockList.ast().flat(),\n    };\n  },\n  arrangementHeader(_1, name, _slash2) {\n    return { name: name.sourceString };\n  },\n  BlockList(block, _1, _then, _2, block2) {\n    return [\n      block.ast(),\n      ...block2.ast(),\n    ];\n  },\n  Block(command, _1, commands) {\n    return {\n      commands: [command.ast(), ...commands.ast()],\n    };\n  },\n  Play(_play, fragment, times, _times) {\n    return {\n      type: \"play\",\n      times: times.sourceString ? parseInt(times.sourceString) : 1,\n      source: fragment.ast(),\n    };\n  },\n  Loop(_loop, fragment) {\n    return {\n      type: \"loop\",\n      source: fragment.ast(),\n    };\n  },\n  Fragment(reversed, ident, track): Source {\n    if (track.sourceString) {\n      return {\n        type: \"inline_track\",\n        instrument: ident.sourceString,\n        track: track.ast()[0],\n        reversed: !!reversed.sourceString,\n      };\n    } else {\n      return {\n        type: \"section\",\n        name: ident.sourceString,\n        reversed: !!reversed.sourceString,\n      };\n    }\n  },\n});\n\nfunction parse(code: string): Ast | null {\n  let match;\n  try {\n    match = grammar.match(code);\n  } catch (e) {\n    return null;\n  }\n  if (match.succeeded()) {\n    return semantics(match).ast();\n  } else {\n    console.log(grammar.trace(code).toString());\n    return null;\n  }\n}\nexport default parse;\n","import parse, { Section, ArrangementSection, BpmSet } from \"./parse\";\n\ntype SectionMap = { [key: string]: Section };\n\nexport interface Composition {\n  error: false;\n  main: ArrangementSection;\n  sections: SectionMap;\n  bpm: number;\n}\n\nexport interface Error {\n  error: true;\n  message: string;\n}\n\nfunction compile(code: string): Composition | Error {\n  const ast = parse(code);\n  if (!ast) {\n    return { error: true, message: \"syntax error\" };\n  }\n  const main = ast.sections.find((s) => s.name === \"main\");\n  if (!main) {\n    return { error: true, message: \"no main/\" };\n  }\n  if (main.type !== \"arrangement\") {\n    return { error: true, message: \"main/ must be arrangement\" };\n  }\n  const bpmSet = ast.settings.find((s) => s.param === \"bpm\") as\n    | BpmSet\n    | undefined;\n\n  const sections: SectionMap = {};\n  const error = ast.sections.reduce<Error | null>((error, section) => {\n    if (sections[section.name]) {\n      return {\n        error: true,\n        message: `multiple sections named \"${section.name}\"`,\n      };\n    }\n    sections[section.name] = section;\n    return error;\n  }, null);\n  if (error) {\n    return error;\n  }\n  // check for cycles\n\n  return {\n    error: false,\n    main,\n    sections,\n    bpm: bpmSet?.value || 120,\n  };\n}\n\nexport default compile;\n","import * as Tone from \"tone\";\nimport { Command, ArrangementSection } from \"./parse\";\nimport { Composition } from \"./compile\";\n\nfunction playbacksFromCommand(\n  composition: Composition,\n  command: Command\n): Playback[] {\n  const { source } = command;\n  const loop = command.type === \"loop\" ? true : command.times;\n  if (source.type === \"inline_track\") {\n    return [\n      new Playback(\n        source.track,\n        source.instrument,\n        source.reversed,\n        () => {},\n        loop\n      ),\n    ];\n  } else {\n    const section = composition.sections[source.name];\n    if (section.type === \"arrangement\") {\n      return playbacksFromSection(composition, section);\n    } else {\n      return section.tracks.map((track) => {\n        return new Playback(\n          track,\n          section.instrument,\n          source.reversed,\n          () => {},\n          loop\n        );\n      });\n    }\n  }\n}\n\nfunction playbacksFromSection(\n  composition: Composition,\n  section: ArrangementSection\n) {\n  return section.blocks.flatMap((block) => {\n    return block.commands.flatMap((command) => {\n      return playbacksFromCommand(composition, command);\n    });\n  });\n}\n\nconst SYNTH = new Tone.PolySynth().toDestination();\nconst KIT = new Tone.Sampler({\n  urls: {\n    A1: \"kick.mp3\",\n    A2: \"snare.mp3\",\n    A3: \"hihat.mp3\",\n  },\n  baseUrl: \"https://tonejs.github.io/audio/drum-samples/breakbeat8/\",\n}).toDestination();\n\nclass Playback {\n  track: string[];\n  instrument: string;\n  reversed: boolean;\n  completionCallback: () => void;\n  note: number;\n  loop: number | boolean;\n  complete: boolean;\n\n  constructor(\n    track: string,\n    instrument: string,\n    reversed: boolean,\n    completionCallback: () => void,\n    loop: number | boolean\n  ) {\n    this.track = track.split(\"\");\n    this.instrument = instrument;\n    this.reversed = reversed;\n    this.completionCallback = completionCallback;\n    this.note = 0;\n    this.loop = loop;\n    this.complete = false;\n  }\n\n  play(time: number) {\n    const track = this.reversed ? this.track.reverse() : this.track;\n    const beat = track[this.note];\n    if (beat !== \"-\" && beat !== \".\") {\n      const length = \"4n\";\n      if (this.instrument === \"synth\") {\n        SYNTH.triggerAttackRelease(`${beat}4`, length, time);\n      } else {\n        const note = beat === \"k\" ? \"A1\" : beat === \"s\" ? \"A2\" : \"A3\";\n        KIT.triggerAttackRelease(note, length, time);\n      }\n    }\n    this.note = (this.note + 1) % this.track.length;\n    if (this.note === 0) {\n      if (typeof this.loop === \"number\") {\n        this.loop -= 1;\n      }\n      if (this.loop === 0 || this.loop === false) {\n        this.completionCallback();\n        this.complete = true;\n      }\n    }\n  }\n}\n\nclass Player {\n  playbacks: Playback[];\n\n  constructor() {\n    this.playbacks = [];\n  }\n\n  play(composition: Composition) {\n    Tone.Transport.bpm.value = composition.bpm;\n\n    this.playbacks = playbacksFromSection(composition, composition.main);\n\n    Tone.Transport.scheduleRepeat((time) => {\n      this.playbacks.forEach((playback) => {\n        if (!playback.complete) {\n          playback.play(time + 0.1);\n        }\n      });\n    }, \"4n\");\n\n    Tone.Transport.start();\n  }\n}\n\nfunction play(composition: Composition) {\n  const player = new Player();\n  player.play(composition);\n}\n\nexport default play;\n","import { useState, ChangeEvent } from \"react\";\nimport styled from \"styled-components/macro\";\nimport compile, { Composition, Error } from \"./compile\";\nimport * as Tone from \"tone\";\nimport raw from \"raw.macro\";\nimport play from \"./play\";\n\nconst Main = styled.main`\n  display: flex;\n  width: 100%;\n  height: 100%;\n`;\nconst Editor = styled.textarea`\n  flex: 1;\n  flex-shrink: 0;\n  padding: 1rem;\n`;\nconst Preview = styled.div`\n  flex: 1;\n  padding: 2rem;\n`;\n\nconst DEFAULT_TEXT = raw(\"../default.txt\");\nconst DEFAULT_COMPOSITION = compile(DEFAULT_TEXT);\n\nfunction App() {\n  const [playing, setPlaying] = useState(false);\n  const [code, setCode] = useState(DEFAULT_TEXT);\n  const [started, setStarted] = useState(false);\n  const [composition, setComposition] = useState<Composition | Error>(DEFAULT_COMPOSITION);\n  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    if (playing) {\n      togglePlay();\n    }\n    setCode(e.target.value);\n    const composition = compile(e.target.value + \"\\n\");\n    setComposition(composition);\n  };\n  const togglePlay = async () => {\n    if (playing) {\n      Tone.Transport.stop();\n      Tone.Transport.cancel();\n      setPlaying(false);\n    } else {\n      if (!started) {\n        await Tone.start();\n      }\n      setStarted(true);\n      if (!composition.error) {\n        play(composition);\n        setPlaying(true);\n      }\n    }\n  };\n  return (\n    <Main>\n      <Editor\n        value={code}\n        onChange={handleChange}\n        autoCorrect=\"none\"\n        autoComplete=\"none\"\n      />\n      <Preview>\n        <button onClick={togglePlay}>{playing ? \"stop\" : \"play\"}</button>\n        {composition.error && composition.message}\n      </Preview>\n    </Main>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}